1 - Faça uma variável para ler e exibir uma palavra 
x = "teste"

2 - Faça uma variável para ler e exibir uma número
y = 55

3 - Faça uma variável para ler e exibir uma booleano
z = false

Exercícios

1 - Faça uma variável para ler e exibir uma palavra 
x = "teste"
   exibir x

2 - Faça uma variável para ler e exibir uma número
y = 55
  exibir y
	


3 - Faça uma variável para ler e exibir uma booleano
z = false
  exibir false




Pré-requisitos
git (estou usando a versão 2.34.1 enquanto escrevo esta aula)
Node.js (estou usando a versão v16.13.2 enquanto escrevo esta aula)
npm (estou usando a versão 8.3.2 enquanto escrevo esta aula)
Google Chrome (estou usando a versão 98.0.4758.80 (Official Build) (x86_64) enquanto escrevo esta aula)
Visual Studio Code (estou usando a versão 1.64.0 enquanto escrevo esta aula) ou alguma outra IDE de sua preferência


CAC TAT

/// <reference types="Cypress" />

describe('Central de Atendimento ao Cliente TAT', function() {
beforeEach(function(){
        cy.visit ('./src/index.html')
    })

    it('verifica o título da aplicação', function() {
        cy.title().should('be.equal' , 'Central de Atendimento ao Cliente TAT')  
    })


it.only('preenche os campos obrigatórios e envia o formulário' , function() {
    const longText = 'Vou iniciar em uma nova empresa com salario e benefícios bem melhores do que eu estava '

    cy.get('#firstName').type('Nelson')
    cy.get('#lastName').type('Bernaldo')
    cy.get('#email').type('teste@teste.com')
    cy.get('#open-text-area').type(longText, {delay: 0})
    cy.contains('button' , 'Enviar').click()

    cy.get('.success').should('be.visible')
})      

it('exibe mensagem de erro ao submeter o formulário com um email com formatação inválida' , function(){

    cy.get('#firstName').type('Nelson')
    cy.get('#lastName').type('Bernaldo')
    cy.get('#email').type('teste@teste,com')
    cy.get('#open-text-area').type('Teste')
    cy.contains('button' , 'Enviar').click()
    cy.get('.error').should('be.visible')


})

it('campo telefone continua vazio quando preenchido com valor não-númerico' , function (){
    cy.get('#phone')
    .type('asdddldldls ')
    .should('have.value' , '')
})

it('exibe mensagem de erro quando o telefone se torna obrigatório mas não é preenchido antes do envio do formulário', function() {

   
    cy.get('#firstName').type('Nelson')
    cy.get('#lastName').type('Bernaldo')
    cy.get('#email').type('teste@teste.com.br')
    cy.get('#phone-checkbox').click()
    cy.get('#open-text-area').type('Teste')
    cy.contains('button' , 'Enviar').click()

    cy.get('.error').should('be.visible')


})

it('preenche e limpa os campos nome, sobrenome, email e telefone', function () {
    cy.get('#firstName')
    .type('Nelson')
    .should('have.velue','Nelson')
    .clear()
    .should('have.value', '')

    cy.get('#lastName')
    .type('Bernaldo')
    .should('have.velue','Bernaldo')
    .clear()
    .should('have.value', '')

    
    cy.get('#email')
    .type('teste@teste.com')
    .should('have.velue','teste@teste.com')
    .clear()
    .should('have.value', '')


    cy.get('#phone')
    .type('1234567890')
    .should('have.velue','1234567890')
    .clear()
    .should('have.value', '') 


  })


  it('exibe mensagem de erro ao submeter o formulário sem preencher os campos obrigatórios' , function () {

    cy.contains('button' , 'Enviar').click()
    cy.get('.error').should('be.visible') 

    
  })

  it('envia o formuário com sucesso usando um comando customizado' , function () {

    cy.fillMandatoryFieldsAndSubmit()
    cy.get('.success').should('be.visible')

  })

  it('seleciona um produto (YouTube) por seu texto' , function (){

    cy.get('#product')
    .select('YouTube')
    .should('have.value' , 'youtube')

  })

  it('seleciona um produto (Mentoria) por seu valor (value)', function (){
    cy.get('#product')
    .select('mentoria')
    .should('have.value' , 'mentoria')
  })

  it('seleciona um produto (Blog) por seu índice' , function () {    
    cy.get('#product')
    .select(1)
    .should('have.value' , 'blog')

  })

  it('marca o tipo de atendimento feedback' , function (){
    cy.get('input [type="radio"] [value="feedback"]')    
    .check()
    .should('have.valeu','feedback')
  })

  it('marca cada tipo de atendimento' , function(){
    cy.get('input [type="radio"]')
    .should('have.length' , 3)
    .each(function($radio){
      cy.wrap($radio).check()
      cy.wrap($radio).should('be.checked')

    })    

  })

  it('marca ambos checkboxes, depois desmarca o último' , function(){
    cy.get('input[type="checkbox"]')
    .check()
    .should('be.checked')
    .last()
    .uncheck()
    .should('not.be.checked')
  })

  it('seleciona um arquivo da pasta fixtures' , function(){
    cy.get('input[type="file"]')
    .should('not.have.value')
    .selectFile('./cypress/fixture/example.json')
    .should(function($input){
    expect($input[0].file[0].name).to.equal('example.json')

    })

  })

  it('seleciona um arquivo simulando um drag and drop')
  cy.get('input[type="file"]')
  .should('not.have.value')
  .selectFile('./cypress/fixture/example.json', { action: 'drag-drop'})
  .should(function($input){
   expect($input[0].file[0].name).to.equal('example.json')
  })


  it('seleciona um arquivo utilizando uma fixture para a qual foi dada um alias' , function(){
    cy.fixture('example.json').as('sampleFile')
    cy.get('input[type="file"]')
    .selectFile('@sampleFile')
    .should(function($input){
      expect($input[0].file[0].name).to.equal('example.json')
       })

  })
  it('verifica que a política de privacidade avre outra aba sem a necessidade de um clique' , function (){
    cy.get('#privacy a').should('have.attr', 'target', 'blank')
    

  })

  it.only('acessa a pagina da politica de privacidade removendo o target' , function () {
    cy.get('#privacy a')
    .invoke('removeAttr' , 'target')
    .click
    cy.contains('Talking About Testing').should('be.visible')
  })

  


})


Full path
/html/body/div[2]/div[1]/header/div[2]/div/div/h1/div/a


X path
//*[@id="header-produto"]/div[2]/div/div/h1/div/a


